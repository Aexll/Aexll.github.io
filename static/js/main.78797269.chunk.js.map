{"version":3,"sources":["App.js","index.js"],"names":["client","Binance","play","noww","setSpeed","event","speed","target","value","console","log","clearInterval","intervall","setInterval","intervalDo","changeIntervalSpeed","App","useState","pairName","nb_click","advanceClick","info_restart","resetChart","currentPrice","setCurrentPrice","currentPositionPrice","setPositionPrice","positionLong","setPositionLong","leverage","capital","setCapital","openedPosition","openPosition","gain","setGain","dataState","setDataState","useEffect","mul","chart","useRef","chartContainerRef","candleSeries","current","createChart","width","window","innerWidth","height","innerHeight","layout","background","color","textColor","grid","vertLines","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","timeScale","autoScale","watermark","text","fontSize","visible","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","formatOHLC","datas","Array","isArray","map","data","time","openTime","startTime","open","high","low","close","cleaner","thedata","n","candles","symbol","interval","limit","endTime","nData","fData","setData","fetchPrevAndSubscribe","Date","getTime","Math","floor","random","prevData","slice","appendData","className","class","id","tabIndex","ref","type","onInput","onClick","xmlns","fill","d","viewBox","fillRule","parseFloat","toFixed","hidden","round","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.78797269.chunk.js","sourcesContent":["import \"./styles.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Binance from \"binance-api-node\";\r\nimport { createChart, CrosshairMode } from 'lightweight-charts';\r\n\r\nconst client = Binance();\r\nvar play = false;                  //  set your counter to 1\r\nvar noww = false;\r\nfunction switchplay() {\r\n  if(play)\r\n    play=false\r\n  else\r\n    play=true\r\n}\r\nfunction setSpeed(event) {\r\n  let speed= (100 - event.target.value)*2\r\n  console.log(\"speed:\",speed)\r\n  changeIntervalSpeed(speed)\r\n  // console.log(\"speed\",speed)\r\n}\r\n\r\nvar intervalDo = false;\r\n\r\n// console.log(\"Hey!\")\r\nvar intervall = setInterval(() => {\r\n  if(play)\r\n    if(intervalDo)\r\n      intervalDo()\r\n\r\n}, 150);\r\n\r\nfunction changeIntervalSpeed(speed)\r\n{\r\n  clearInterval(intervall)\r\n  intervall = setInterval(() => {\r\n  if(play)\r\n    if(intervalDo)\r\n      intervalDo()\r\n  }, speed);\r\n}\r\n\r\nexport default function App() {\r\n  const [pairName, setPairName] = useState(\"BTCUSDT\");\r\n  const [nb_click, advanceClick] = useState(0);\r\n  const [info_restart, resetChart] = useState(0);\r\n  const [currentPrice, setCurrentPrice] = useState(105);\r\n  const [currentPositionPrice, setPositionPrice] = useState(105);\r\n  const [positionLong, setPositionLong] = useState(true);\r\n  const [leverage, setLevrage] = useState(100);\r\n  const [capital, setCapital] = useState(100);\r\n  const [openedPosition, openPosition] = useState(false);\r\n  const [gain, setGain] = useState(0);\r\n  const [dataState, setDataState] = useState(1);\r\n\r\n  intervalDo = () => {advanceClick(nb_click+1)};\r\n\r\n  useEffect(() => {\r\n    if(!openedPosition) {\r\n      let mul = gain\r\n      if(!positionLong)\r\n        mul*=-1\r\n      setCapital(capital+capital*mul)\r\n    }\r\n  },[openedPosition])\r\n\r\n  // chart creation\r\n  // full example (without realtime data): https://codesandbox.io/s/9inkb?file=/src/index.js\r\n  const chart = useRef();\r\n  const chartContainerRef = useRef();\r\n  const candleSeries = useRef();\r\n  useEffect(() => {\r\n    if (chart.current)\r\n      return\r\n\r\n    chart.current = createChart(chartContainerRef.current, {\r\n      width: window.innerWidth,// chartContainerRef.current.clientWidth,\r\n      height: window.innerHeight,// chartContainerRef.current.clientHeight,\r\n      layout: {\r\n        // backgroundColor: '#253248',\r\n        // backgroundColor: 'rgba(255, 0, 255, 0.9)',\r\n        background: {\r\n          color:  '#253248'\r\n        },\r\n        textColor: 'rgba(255, 255, 255, 0.9)',\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          color: '#334158',\r\n        },\r\n        horzLines: {\r\n          color: '#334158',\r\n        },\r\n      },\r\n      crosshair: {\r\n        mode: CrosshairMode.Normal,\r\n      },\r\n      priceScale: {\r\n        borderColor: '#485c7b',\r\n      },\r\n      timeScale: {\r\n        borderColor: '#485c7b',\r\n        autoScale: true,\r\n      },\r\n      watermark: {\r\n        text: \"BTCUSDT\",\r\n        fontSize: 142,\r\n        color: \"rgba(256, 256, 256, 0.1)\",\r\n        visible: true\r\n      }\r\n    });\r\n\r\n    // console.log(chart.current);\r\n\r\n    candleSeries.current = chart.current.addCandlestickSeries({\r\n      upColor: '#4bffb5',\r\n      downColor: '#ff4976',\r\n      borderDownColor: '#ff4976',\r\n      borderUpColor: '#4bffb5',\r\n      wickDownColor: '#838ca1',\r\n      wickUpColor: '#838ca1',\r\n    });\r\n\r\n  }, [])\r\n\r\n  const formatOHLC = datas => {\r\n    // console.log(\"formatohlc \", datas)\r\n    if (!Array.isArray(datas))\r\n      datas = [datas]\r\n    return datas.map(data => ({\r\n      time: data.openTime || data.startTime,\r\n      open: data.open,\r\n      high: data.high,\r\n      low: data.low,\r\n      close: data.close\r\n    }))\r\n  }\r\n\r\n  // binance data subscription\r\n  // cleaner is a function to unsubscribe a previous subscription\r\n\r\n  \r\n  const cleaner = useRef();\r\n  var thedata = useRef();\r\n  useEffect(() => {\r\n    if (cleaner.current) {\r\n      // unsubscribe from previous subscription\r\n      // console.log(\"cleaned previous subscriber: \", cleaner.current)\r\n      cleaner.current()\r\n      // clear chart candles\r\n      candleSeries.current.setData([]);\r\n    }\r\n\r\n    // // subscribe to websocket for the future price update\r\n    // const clean = client.ws.candles(pairName, \"1h\", (res) => {\r\n    //   console.log(\"res: \", res)\r\n    //   const candleData = {\r\n    //     time: res.startTime,\r\n    //     open: res.open,\r\n    //     high: res.high,\r\n    //     low: res.low,\r\n    //     close: res.close\r\n    //   }\r\n    //   console.log(candleData.time, candleData.close)\r\n    //   candleSeries.current.update(candleData)\r\n    // });\r\n    // cleaner.current = clean;\r\n    // console.log(\"added new candles subscription for \", pairName)\r\n\r\n\r\n    const fetchPrevAndSubscribe = async () => {\r\n      // before subscribe to websocket, should prefill the chart with existing history, this can be fetched with normal REST request\r\n      // SHOULD DO THIS BEFORE SUBSCRIBE, HOWEVER MOVING SUBSCRIBE TO AFTER THIS BLOCK OF CODE WILL CAUSE THE SUBSCRIPTION GOES ON FOREVER\r\n      // REACT BUG?\r\n      // const now = Date.now()\r\n      if(!noww)\r\n        noww = new Date('2022-06-01T00:00:00').getTime() + Math.floor(Math.random()*60000*60*24*90)// + nb_click*60000\r\n      // const now = new Date('September 10, 2022 23:15:30')\r\n\r\n      let prevData = await client.candles({\r\n        symbol: pairName,\r\n        interval: \"1m\",\r\n        limit: 1000,\r\n        endTime: noww\r\n      })\r\n      prevData = formatOHLC(prevData)\r\n\r\n      // let nData = await client.candles({\r\n      //   symbol: pairName,\r\n      //   interval: \"1m\",\r\n      //   limit: 550,\r\n      //   endTime: now + 550*60000\r\n      // })\r\n      // nData = formatOHLC(nData)\r\n\r\n      // const fData=[...prevData,...nData]\r\n\r\n      // candleSeries.current.setData(prevData);\r\n      thedata.current = prevData\r\n      candleSeries.current.setData(thedata.current.slice(0,500+nb_click))\r\n      setCurrentPrice(thedata.current[500+nb_click]['close'])\r\n      setPositionPrice(currentPrice)\r\n      setPositionLong(true)\r\n    }\r\n\r\n    fetchPrevAndSubscribe()\r\n  }, [pairName,info_restart])\r\n\r\n  async function appendData(n) {\r\n    let nData = await client.candles({\r\n      symbol: pairName,\r\n      interval: \"1m\",\r\n      limit: 1000,\r\n      endTime: noww + (1000*60000)*n\r\n    })\r\n    nData = formatOHLC(nData)\r\n\r\n    const fData=[...thedata.current,...nData]\r\n    thedata.current = fData\r\n    console.log((n-1)*1000,n*1000)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if( dataState > 0)\r\n      appendData(dataState)\r\n  },[dataState])\r\n\r\n  useEffect(() => {\r\n    if(! candleSeries.current)\r\n      return\r\n    if(! thedata.current)\r\n      return\r\n    candleSeries.current.setData(thedata.current.slice(0,500+nb_click))\r\n    setCurrentPrice(thedata.current[500+nb_click]['close'])\r\n\r\n\r\n\r\n    // append the candlegraph data\r\n    if(nb_click > (1000*dataState))\r\n      setDataState(dataState+1)\r\n    // console.log(\"click ! \",nb_click)\r\n\r\n  },[nb_click])\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <div class=\"core\" id=\"overlay\" tabIndex={-1}>\r\n        <div class=\"graph\" ref={chartContainerRef} />\r\n        <h1 class=\"title\">Backtest for chads</h1>\r\n\r\n        <input type=\"range\" id=\"slider\" onInput={setSpeed}></input>\r\n\r\n\r\n        <button class=\"button-9\" onClick={() => switchplay()}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fast-forward\" >\r\n            <path d=\"M6.804 8 1 4.633v6.734L6.804 8Zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C.713 12.69 0 12.345 0 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692Z\"/>\r\n            <path d=\"M14.804 8 9 4.633v6.734L14.804 8Zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C8.713 12.69 8 12.345 8 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692Z\"/>\r\n          </svg>\r\n        </button>\r\n        <button class=\"button-8\" onClick={() => resetChart(info_restart+1)}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-recycle\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M9.302 1.256a1.5 1.5 0 0 0-2.604 0l-1.704 2.98a.5.5 0 0 0 .869.497l1.703-2.981a.5.5 0 0 1 .868 0l2.54 4.444-1.256-.337a.5.5 0 1 0-.26.966l2.415.647a.5.5 0 0 0 .613-.353l.647-2.415a.5.5 0 1 0-.966-.259l-.333 1.242-2.532-4.431zM2.973 7.773l-1.255.337a.5.5 0 1 1-.26-.966l2.416-.647a.5.5 0 0 1 .612.353l.647 2.415a.5.5 0 0 1-.966.259l-.333-1.242-2.545 4.454a.5.5 0 0 0 .434.748H5a.5.5 0 0 1 0 1H1.723A1.5 1.5 0 0 1 .421 12.24l2.552-4.467zm10.89 1.463a.5.5 0 1 0-.868.496l1.716 3.004a.5.5 0 0 1-.434.748h-5.57l.647-.646a.5.5 0 1 0-.708-.707l-1.5 1.5a.498.498 0 0 0 0 .707l1.5 1.5a.5.5 0 1 0 .708-.707l-.647-.647h5.57a1.5 1.5 0 0 0 1.302-2.244l-1.716-3.004z\"/>\r\n          </svg>\r\n        </button>\r\n        <button class=\"short_button\" onClick={ () => (setPositionPrice(currentPrice),setPositionLong(false),openPosition(!openedPosition),setGain(((currentPrice - currentPositionPrice)/currentPositionPrice)*leverage)) }>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-down-arrow\" viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0Zm10 11.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 0-1 0v2.6l-3.613-4.417a.5.5 0 0 0-.74-.037L7.06 8.233 3.404 3.206a.5.5 0 0 0-.808.588l4 5.5a.5.5 0 0 0 .758.06l2.609-2.61L13.445 11H10.5a.5.5 0 0 0-.5.5Z\"/>\r\n          </svg>\r\n        </button>\r\n        <button class=\"long_button\" onClick={ () =>  (setPositionPrice(currentPrice),setPositionLong(true),openPosition(!openedPosition),setGain(((currentPrice - currentPositionPrice)/currentPositionPrice)*leverage)) }>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up-arrow\" viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0Zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5Z\"/>\r\n          </svg>\r\n        </button>\r\n        <h1 id=\"price\">${ parseFloat(capital.toFixed(2)) }</h1>\r\n        \r\n        <div id=\"positionshort\" hidden={positionLong || !openedPosition} >\r\n          <h1 id=\"inpos\">Short</h1>\r\n          <h1 id=\"inpos\">{ \r\n           -1*Math.round((((currentPrice - currentPositionPrice)/currentPositionPrice)*leverage)*100)\r\n          }%</h1>\r\n        </div>\r\n        \r\n        <div id=\"positionlong\" hidden={!positionLong || !openedPosition} >\r\n          <h1 id=\"inpos\">Long</h1>\r\n          <h1 id=\"inpos\">{ \r\n           Math.round((((currentPrice - currentPositionPrice)/currentPositionPrice)*leverage)*100)\r\n          }%</h1>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n      // \r\n      // {pairName} \r\n      // <div ref={chartContainerRef} style={{ width: \"100%\", height: \"500px\"}} />\r\n      // <span>{speed}</span>\r\n      // <input type=\"range\" onInput={setSpeed}></input>\r\n      // <button onClick={() => advanceClick(nb_click+0)}>+1</button>\r\n      // <div>Current selection: {pairName}</div>\r\n      // <span onClick={() => setPairName(\"BTCUSDT\")}>BTCUSDT, </span>\r\n      // <span onClick={() => setPairName(\"ETHUSDT\")}>ETHUSDT, </span>\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}